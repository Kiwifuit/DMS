name: Releasing

on:
  push:
    tags: "v*.*.*"

jobs:
  ffi:
    name: Build backend dynlib
    runs-on: ubuntu-latest

    strategy:
      matrix:
        platform:
          - uname: x86-64 Windows
            target: x86_64-pc-windows-gnu
            dynLibName: libmcs.dll
            releaseLibName: mcs-x86_64.dll

          # - uname: x86 Windows
          #   target: i686-pc-windows-gnu
          #   dynLibName: libmcs.dll
          #   releaseLibName: mcs-i686.dll

          # - uname: x86-64 Linux
          #   target: x86_64-unknown-linux-gnu
          #   dynLibName: libmcs.so
          #   releaseLibName: libmcs-x86_64.so

          # - uname: x86 Linux
          #   target: i686-unknown-linux-gnu
          #   dynLibName: libmcs.so
          #   releaseLibName: libmcs-i686.so

          # - uname: ARM64 Linux
          #   target: aarch64-unknown-linux-gnu
          #   dynLibName: libmcs.so
          #   releaseLibName: libmcs-aarch64.so

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Install Cross
        uses: taiki-e/install-action@v2
        with:
          tool: cross@0.2.5

      - name: Build for ${{ matrix.platform.uname }}
        run: cross build --target ${{ matrix.platform.target }} --release --package mcs-ffi

      - name: "[1/2] Make dynlib dir"
        run: mkdir dist

      - name: "[2/2] Collect dynlibs"
        run: cp target/${{ matrix.platform.target }}/release/${{ matrix.platform.dynLibName }} dist/${{ matrix.platform.releaseLibName }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          path: dist/
          name: Dynlibs

  release:
    needs: ffi
    name: Release all project binaries
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4

      - name: Create release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: dist/*
          generate_release_notes: true
